{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple example NodeJS API project to demonstrate Swagger Documentation",
        "version": "0.7.5",
        "title": "Swagger API",
        "contact": {
            "email": "abc@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "schemes": ["http"],
    "host": "localhost:5000",
    "paths" : {
        "/getAllUsers" : {
            "get" : {
                "summary" : "Get all the Users",
                "description": "Get all the Users",
                "produces": ["application/json"],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SuccessResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
    
    "/getUserById/{id}" : {
        "get" : {
            "summary" : "Get User By ID",
            "description": "Get User By ID",
            "produces": ["application/json"],
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "user id that needs to be shown",
                    "required": true
                }       
            ],
            "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    }
                },
                "400": {
                    "description": "Invalid status value",
                    "schema": {
                        "$ref": "#/definitions/InvalidResponse"
                    }
                }
            }
        }
    },

    "/addUser" : {
        "post" : {
            "summary" : "Add the New User",
            "description": "Add the New User",
            "produces": ["application/json"],
            "consumes": ["application/json"],
            "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "task object",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Task" 
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    }
                },
                "400": {
                    "description": "Invalid status value",
                    "schema": {
                        "$ref": "#/definitions/InvalidResponse"
                    }
                }
            }
        }
    },

    "/editUser/{id}" : {
        "put" : {
            "summary" : "Update the User",
            "description": "Update the User",
            "produces": ["application/json"],
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "task id that needs to be deleted",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "task object",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "task" : {
                                "type": "object",
                                "$ref": "#/definitions/Task"
                            } 
                        }
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    }
                },
                "400": {
                    "description": "Invalid status value",
                    "schema": {
                        "$ref": "#/definitions/InvalidResponse"
                    }
                }
            }
        }
    },

    "/deleteUser/{id}" : {
        "delete" : {
            "summary" : "Delete the task",
            "description": "Delete the task",
            "produces": ["application/json"],
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "task id that needs to be deleted",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/SuccessResponse"
                        }
                    }
                },
                "400": {
                    "description": "Invalid status value",
                    "schema": {
                        "$ref": "#/definitions/InvalidResponse"
                    }
                }
            }
        }
    }

    },

    "definitions": {
        "SuccessResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                     "type": "integer"
                },
                "user_first_name": {
                    "type": "string"
                },
                "user_last_name": {
                     "type": "string"
                },
                "user_organization_name": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "user_photo": {
                    "type": "null"
                },
                "user_created_date": {
                    "type": "timestamp"
                },  
                "user_created_by": {
                    "type": "string"
                },
                "user_updated_date": {
                    "type": "null"
                },
                "user_updated_by": {
                    "type": "null"
                },
                "user_status": {
                    "type": "boolean"
                },
                "user_confirmation_date": {
                    "type": "null"
                },
                "user_confirmation_status": {
                    "type": "boolean"
                },
                "user_freeze": {
                    "type": "boolean"
                }
            }
        },

        "Task": {
            "type": "object",
            "properties": {
                "user_first_name": {
                    "type": "string"
                },
                "user_last_name": {
                     "type": "string"
                },
                "user_organization_name": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                }, 
                "user_created_by": {
                    "type": "string"
                },
                "user_status": {
                    "type": "boolean"
                },
                "user_confirmation_status": {
                    "type": "boolean"
                },
                "user_freeze": {
                    "type": "boolean"
                }
            }
        },
   
        "InvalidResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }

        }
    }
}
